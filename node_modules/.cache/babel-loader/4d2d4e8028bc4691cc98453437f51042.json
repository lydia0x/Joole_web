{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/JavaCloudApplication/Joole_web/src/containers/register.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions/auth';\nimport styles from './register.module.css';\nimport jooleLogo from '../assets/logo.png';\n\nclass Register extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      image: \"\",\n      isSignup: true\n    };\n\n    this.inputChangedHandler = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.submitHandler = event => {\n      const users = {\n        username: this.state.username,\n        password: this.state.password,\n        image: this.state.image\n      };\n      event.preventDefault();\n      this.props.userRegister(users);\n    };\n\n    this.switchAuthModeHandler = () => {\n      this.setState(prevState => {\n        return {\n          isSignup: !prevState.isSignup\n        };\n      });\n    };\n  }\n\n  checkValidity(value, rules) {\n    let isValid = true;\n\n    if (!rules) {\n      return true;\n    }\n\n    if (rules.required) {\n      isValid = value.trim() !== '' && isValid;\n    }\n\n    if (rules.minLength) {\n      isValid = value.length >= rules.minLength && isValid;\n    }\n\n    if (rules.maxLength) {\n      isValid = value.length <= rules.maxLength && isValid;\n    }\n\n    if (rules.isEmail) {\n      const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n      isValid = pattern.test(value) && isValid;\n    }\n\n    if (rules.isNumeric) {\n      const pattern = /^\\d+$/;\n      isValid = pattern.test(value) && isValid;\n    }\n\n    return isValid;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: styles.background,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.submitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: styles.logo,\n      src: jooleLogo,\n      alt: \"Joole\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Username\"), React.createElement(\"input\", {\n      name: \"username\",\n      placeholder: \"Username\",\n      onChange: this.inputChangedHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Password\",\n      onChange: this.inputChangedHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Image\"), React.createElement(\"input\", {\n      name: \"image\",\n      placeholder: \"Image (URL)\",\n      onChange: this.inputChangedHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error,\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    userRegister: user => dispatch(actions.userRegister(user))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register); // import React, { Component } from 'react';\n// import jooleLogo from '../assets/logo.png';\n// class Register extends Component {\n//   state = {\n//     username: \"\",\n//     password: \"\",\n//     image: \"\"\n//   }\n//   render() {\n//     return (\n//       <form onSubmit={this.handleSubmit}>\n//         <span>\n//           <image src={jooleLogo} alt=\"Joole\" />\n//         </span>  \n//         <h1>Register</h1>\n//         <label>Username</label>\n//         <input\n//           name='username'\n//           placeholder='Username'\n//         /><br />\n//         <label>Password</label>\n//         <input\n//           type='password'\n//           name='password'\n//           placeholder='Password'\n//         /><br />\n//         <label>Image</label>\n//         <input\n//           name='image'\n//           placeholder='Image (URL)'\n//         /><br />\n//         <input type='submit' />\n//       </form>\n//     )\n//   }\n// }\n// export default Register;","map":{"version":3,"sources":["/Users/apple/Desktop/JavaCloudApplication/Joole_web/src/containers/register.js"],"names":["React","Component","connect","actions","styles","jooleLogo","Register","state","username","password","image","isSignup","inputChangedHandler","event","setState","target","name","value","submitHandler","users","preventDefault","props","userRegister","switchAuthModeHandler","prevState","checkValidity","rules","isValid","required","trim","minLength","length","maxLength","isEmail","pattern","test","isNumeric","render","background","logo","mapStateToProps","loading","auth","error","isAuthenticated","token","mapDispatchToProps","dispatch","user"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,iBAAzB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AAEA,OAAOC,SAAP,MAAsB,oBAAtB;;AAGA,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC/BM,KAD+B,GACvB;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,QAAQ,EAAE,EAFJ;AAGNC,MAAAA,KAAK,EAAE,EAHD;AAINC,MAAAA,QAAQ,EAAE;AAJJ,KADuB;;AAAA,SAuC/BC,mBAvC+B,GAuCRC,KAAD,IAAW;AAC/B,WAAKC,QAAL,CAAc;AACZ,SAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBH,KAAK,CAACE,MAAN,CAAaE;AADtB,OAAd;AAGD,KA3C8B;;AAAA,SA6C/BC,aA7C+B,GA6CdL,KAAD,IAAW;AAEzB,YAAMM,KAAK,GAAG;AACZX,QAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC,QADT;AAEZC,QAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWE,QAFT;AAGZC,QAAAA,KAAK,EAAE,KAAKH,KAAL,CAAWG;AAHN,OAAd;AAKAG,MAAAA,KAAK,CAACO,cAAN;AACA,WAAKC,KAAL,CAAWC,YAAX,CAAwBH,KAAxB;AACD,KAtD8B;;AAAA,SAwD/BI,qBAxD+B,GAwDP,MAAM;AAC5B,WAAKT,QAAL,CAAcU,SAAS,IAAI;AACzB,eAAO;AAAEb,UAAAA,QAAQ,EAAE,CAACa,SAAS,CAACb;AAAvB,SAAP;AACD,OAFD;AAGD,KA5D8B;AAAA;;AAQ/Bc,EAAAA,aAAa,CAACR,KAAD,EAAQS,KAAR,EAAe;AAC1B,QAAIC,OAAO,GAAG,IAAd;;AACA,QAAI,CAACD,KAAL,EAAY;AACV,aAAO,IAAP;AACD;;AAED,QAAIA,KAAK,CAACE,QAAV,EAAoB;AAClBD,MAAAA,OAAO,GAAGV,KAAK,CAACY,IAAN,OAAiB,EAAjB,IAAuBF,OAAjC;AACD;;AAED,QAAID,KAAK,CAACI,SAAV,EAAqB;AACnBH,MAAAA,OAAO,GAAGV,KAAK,CAACc,MAAN,IAAgBL,KAAK,CAACI,SAAtB,IAAmCH,OAA7C;AACD;;AAED,QAAID,KAAK,CAACM,SAAV,EAAqB;AACnBL,MAAAA,OAAO,GAAGV,KAAK,CAACc,MAAN,IAAgBL,KAAK,CAACM,SAAtB,IAAmCL,OAA7C;AACD;;AAED,QAAID,KAAK,CAACO,OAAV,EAAmB;AACjB,YAAMC,OAAO,GAAG,uIAAhB;AACAP,MAAAA,OAAO,GAAGO,OAAO,CAACC,IAAR,CAAalB,KAAb,KAAuBU,OAAjC;AACD;;AAED,QAAID,KAAK,CAACU,SAAV,EAAqB;AACnB,YAAMF,OAAO,GAAG,OAAhB;AACAP,MAAAA,OAAO,GAAGO,OAAO,CAACC,IAAR,CAAalB,KAAb,KAAuBU,OAAjC;AACD;;AAED,WAAOA,OAAP;AACD;;AA0BDU,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAEjC,MAAM,CAACkC,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,QAAQ,EAAE,KAAKpB,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAEd,MAAM,CAACmC,IAAvB;AAA6B,MAAA,GAAG,EAAElC,SAAlC;AAA6C,MAAA,GAAG,EAAC,OAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,EAME;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,WAAW,EAAC,UAFd;AAGE,MAAA,QAAQ,EAAE,KAAKO,mBAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAZF,EAaE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,WAAW,EAAC,UAHd;AAIE,MAAA,QAAQ,EAAE,KAAKA,mBAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,EAkBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBJ,EAoBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eApBF,EAqBE;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,WAAW,EAAC,aAFd;AAGE,MAAA,QAAQ,EAAE,KAAKA,mBAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArBF,EAyBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzBJ,EA2BE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3BF,CADF,CADF;AAiCD;;AAjG8B;;AAoGjC,MAAM4B,eAAe,GAAGjC,KAAK,IAAI;AAC/B,SAAO;AACLkC,IAAAA,OAAO,EAAElC,KAAK,CAACmC,IAAN,CAAWD,OADf;AAELE,IAAAA,KAAK,EAAEpC,KAAK,CAACmC,IAAN,CAAWC,KAFb;AAGLC,IAAAA,eAAe,EAAErC,KAAK,CAACmC,IAAN,CAAWG,KAAX,KAAqB;AAHjC,GAAP;AAMD,CAPD;;AASA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLzB,IAAAA,YAAY,EAAG0B,IAAD,IAAUD,QAAQ,CAAC5C,OAAO,CAACmB,YAAR,CAAqB0B,IAArB,CAAD;AAD3B,GAAP;AAGD,CAJD;;AAMA,eAAe9C,OAAO,CAACsC,eAAD,EAAkBM,kBAAlB,CAAP,CAA6CxC,QAA7C,CAAf,C,CAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions/auth';\nimport styles from './register.module.css';\n\nimport jooleLogo from '../assets/logo.png';\n\n\nclass Register extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    image: \"\",\n    isSignup: true\n  }\n\n  checkValidity(value, rules) {\n    let isValid = true;\n    if (!rules) {\n      return true;\n    }\n\n    if (rules.required) {\n      isValid = value.trim() !== '' && isValid;\n    }\n\n    if (rules.minLength) {\n      isValid = value.length >= rules.minLength && isValid\n    }\n\n    if (rules.maxLength) {\n      isValid = value.length <= rules.maxLength && isValid\n    }\n\n    if (rules.isEmail) {\n      const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n      isValid = pattern.test(value) && isValid\n    }\n\n    if (rules.isNumeric) {\n      const pattern = /^\\d+$/;\n      isValid = pattern.test(value) && isValid\n    }\n\n    return isValid;\n  }\n\n  inputChangedHandler = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  submitHandler = (event) => {\n\n    const users = {\n      username: this.state.username,\n      password: this.state.password,\n      image: this.state.image\n    };\n    event.preventDefault();\n    this.props.userRegister(users);\n  }\n\n  switchAuthModeHandler = () => {\n    this.setState(prevState => {\n      return { isSignup: !prevState.isSignup };\n    });\n  }\n\n\n  render() {\n    return (\n      <div className={styles.background}>\n        <form onSubmit={this.submitHandler}>\n          <span>\n            <img className={styles.logo} src={jooleLogo} alt=\"Joole\" />\n          </span>\n\n          <label>Username</label>\n          <input\n            name='username'\n            placeholder='Username'\n            onChange={this.inputChangedHandler}\n          /><br />\n\n          <label>Password</label>\n          <input\n            type='password'\n            name='password'\n            placeholder='Password'\n            onChange={this.inputChangedHandler}\n          /><br />\n\n          <label>Image</label>\n          <input\n            name='image'\n            placeholder='Image (URL)'\n            onChange={this.inputChangedHandler}\n          /><br />\n\n          <input type='submit' />\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error,\n    isAuthenticated: state.auth.token !== null,\n\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    userRegister: (user) => dispatch(actions.userRegister(user))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\n\n\n// import React, { Component } from 'react';\n// import jooleLogo from '../assets/logo.png';\n\n// class Register extends Component {\n\n//   state = {\n//     username: \"\",\n//     password: \"\",\n//     image: \"\"\n//   }\n\n//   render() {\n//     return (\n//       <form onSubmit={this.handleSubmit}>\n//         <span>\n//           <image src={jooleLogo} alt=\"Joole\" />\n//         </span>  \n//         <h1>Register</h1>\n\n//         <label>Username</label>\n//         <input\n//           name='username'\n//           placeholder='Username'\n//         /><br />\n\n//         <label>Password</label>\n//         <input\n//           type='password'\n//           name='password'\n//           placeholder='Password'\n//         /><br />\n\n//         <label>Image</label>\n//         <input\n//           name='image'\n//           placeholder='Image (URL)'\n//         /><br />\n\n//         <input type='submit' />\n//       </form>\n//     )\n//   }\n// }\n\n// export default Register;"]},"metadata":{},"sourceType":"module"}