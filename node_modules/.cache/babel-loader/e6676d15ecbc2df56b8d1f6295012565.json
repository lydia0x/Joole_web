{"ast":null,"code":"import axios from 'axios';\nimport * as actionTypes from './actionTypes';\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = (token, username, image) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token,\n    username: username,\n    image: image\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport const logout = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('expirationDate');\n  localStorage.removeItem('username');\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\nexport const checkAuthTimeout = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\nexport const userRegister = user => {\n  return dispatch => {\n    let url = 'http://localhost:8080/register';\n    axios.post(url, user).then(response => {\n      console.log(response);\n    }).catch(err => {\n      dispatch(authFail(err.response.data.error));\n    });\n  };\n};\nexport const userLogin = user => {\n  return dispatch => {\n    let url = 'http://localhost:8080/authenticate';\n    axios.post(url, user).then(response => {\n      console.log(response.data.token);\n      const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\n      localStorage.setItem('token', response.data.token);\n      localStorage.setItem('expirationDate', expirationDate);\n      localStorage.setItem('username', response.data.username);\n      localStorage.setItem('image', response.data.image);\n      dispatch(authSuccess(response.data.token, response.data.username, response.data.image)); // dispatch(checkAuthTimeout(response.data.expiresIn));\n    }).catch(err => {\n      dispatch(authFail(err.response.data.error));\n    });\n  };\n};\nexport const getHomePage = () => {\n  return dispatch => {\n    const token = localStorage.token;\n\n    if (token) {\n      let url = 'http://localhost:8080/home';\n      axios.get(url).set('Authorization', 'Bearer ' + token).then(response => {\n        console.log(response);\n      }).catch(err => {\n        dispatch(authFail(err.response.data.error));\n      });\n    }\n  };\n};\nexport const authCheckState = () => {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n\n    if (!token) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem('expirationDate'));\n\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        const username = localStorage.getItem('username');\n        dispatch(authSuccess(token, username));\n        dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\n      }\n    }\n  };\n};","map":{"version":3,"sources":["/Users/apple/Desktop/JavaCloudApplication/Joole_web/src/actions/auth.js"],"names":["axios","actionTypes","authStart","type","AUTH_START","authSuccess","token","username","image","AUTH_SUCCESS","authFail","error","AUTH_FAIL","logout","localStorage","removeItem","AUTH_LOGOUT","checkAuthTimeout","expirationTime","dispatch","setTimeout","userRegister","user","url","post","then","response","console","log","catch","err","data","userLogin","expirationDate","Date","getTime","expiresIn","setItem","getHomePage","get","set","authCheckState","getItem"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nimport * as actionTypes from './actionTypes';\n\n\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    };\n};\n\nexport const authSuccess = (token, username, image) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        token: token,\n        username: username,\n        image: image,\n    };\n};\n\nexport const authFail = (error) => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    };\n};\n\nexport const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationDate');\n    localStorage.removeItem('username');\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    };\n};\n\nexport const checkAuthTimeout = (expirationTime) => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout());\n        }, expirationTime * 1000);\n    };\n};\n\nexport const userRegister = user => {\n    return dispatch => {\n        let url = 'http://localhost:8080/register';\n        axios.post(url, user)\n            .then(response => {\n                console.log(response);\n            })\n            .catch(err => {\n                dispatch(authFail(err.response.data.error));\n            });\n    };\n};\n\nexport const userLogin = user => {\n    return dispatch => {\n        let url = 'http://localhost:8080/authenticate';\n        axios.post(url, user)\n            .then(response => {\n                console.log(response.data.token);\n                const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\n                localStorage.setItem('token', response.data.token);\n                localStorage.setItem('expirationDate', expirationDate);\n                localStorage.setItem('username', response.data.username);\n                localStorage.setItem('image', response.data.image);\n                dispatch(authSuccess(response.data.token, response.data.username, response.data.image));\n                // dispatch(checkAuthTimeout(response.data.expiresIn));\n            })\n            .catch(err => {\n                dispatch(authFail(err.response.data.error));\n            });\n    };\n};\n\nexport const getHomePage = () => {\n    return dispatch => {\n        const token = localStorage.token;\n        if(token){\n        let url = 'http://localhost:8080/home';\n        axios.get(url)\n            .set('Authorization', 'Bearer ' + token)\n            .then(response => {\n                console.log(response);\n            })\n            .catch(err => {\n                dispatch(authFail(err.response.data.error));\n            });\n        }    \n    };\n};\n\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token');\n        if (!token) {\n            dispatch(logout());\n        } else {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\n            if (expirationDate <= new Date()) {\n                dispatch(logout());\n            } else {\n                const username = localStorage.getItem('username');\n                dispatch(authSuccess(token, username));\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000 ));\n            }   \n        }\n    };\n};\n\n"]},"metadata":{},"sourceType":"module"}