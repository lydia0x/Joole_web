{"ast":null,"code":"import axios from 'axios';\nimport * as actionTypes from './actionTypes';\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = (token, username, image) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token,\n    username: username,\n    image: image\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport const logout = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('expirationDate');\n  localStorage.removeItem('username');\n  localStorage.removeItem('image');\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\nexport const checkAuthTimeout = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\nexport const userRegister = user => {\n  return dispatch => {\n    // let url = 'http://localhost:8080/register';\n    // axios.post(url, user)\n    axios.post('/register', user).then(response => {\n      console.log(response);\n    }).catch(err => {\n      dispatch(authFail(err.response.data.error));\n    });\n  };\n};\nexport const userLogin = user => {\n  return dispatch => {\n    let url = 'http://localhost:8080/authenticate';\n    axios.post('/authenticate', user).then(response => {\n      console.log(response.data.token);\n      const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\n      localStorage.setItem('token', response.data.token);\n      localStorage.setItem('expirationDate', expirationDate);\n      localStorage.setItem('username', response.data.username);\n      localStorage.setItem('image', response.data.image);\n      dispatch(authSuccess(response.data.token, response.data.username, response.data.image)); // dispatch(checkAuthTimeout(response.data.expiresIn));\n    }).catch(err => {\n      dispatch(authFail(err.response.data.error));\n    });\n  };\n};\nexport const setAuthRedirectPath = path => {\n  return {\n    type: actionTypes.SET_AUTH_REDIRECT_PATH,\n    path: path\n  };\n};\nexport const setFansInfo = fans => {\n  return {\n    type: actionTypes.SET_FAN_INFO,\n    fans: fans\n  };\n};\nexport const setFansArr = fanArr => {\n  return {\n    type: actionTypes.SET_FAN_ARR,\n    fanArr: fanArr\n  };\n};\nexport const setSelectedFan = selectedFan => {\n  return {\n    type: actionTypes.SET_FAN_DETAIL,\n    selectedFan: selectedFan\n  };\n};\nexport const authCheckState = () => {\n  return dispatch => {\n    const token = localStorage.getItem('token'); // if (!token) {\n    //     dispatch(logout());\n    // } else {\n    //     const expirationDate = new Date(localStorage.getItem('expirationDate'));\n    //     if (expirationDate <= new Date()) {\n    //         dispatch(logout());\n    //     } else {\n    //         const username = localStorage.getItem('username');\n    //         dispatch(authSuccess(token, username));\n    //         dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000 ));\n    //     }   \n    // }\n\n    if (!token) {\n      dispatch(logout());\n    } else {\n      const username = localStorage.getItem('username');\n      dispatch(authSuccess(token, username));\n    }\n  };\n};\nexport const getHomePage = () => {\n  return dispatch => {\n    console.log(\"------\");\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      let url = 'http://localhost:8080/home';\n      axios.get('/home', {\n        headers: {\n          \"Authorization\": \"Bearer \".concat(token)\n        }\n      }) // .set('Authorization', 'Bearer ' + token)\n      .then(response => {\n        console.log(response);\n      }).catch(err => {\n        dispatch(authFail(err.response.data.error));\n      });\n    }\n  };\n};\nexport const getAllFans = () => {\n  return dispatch => {\n    console.log(\"====================================\");\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      let url = 'http://localhost:8080/getAllFans';\n      axios.get('/getAllFans', {\n        headers: {\n          \"Authorization\": \"Bearer \".concat(token)\n        }\n      }).then(response => {\n        console.log(response);\n        dispatch(setFansInfo(response.data));\n      }); // .catch(err => {\n      //     dispatch(authFail(err.response.data.error));\n      // });\n    }\n  };\n};","map":{"version":3,"sources":["/Users/apple/Desktop/JavaCloudApplication/Joole_web/src/actions/auth.js"],"names":["axios","actionTypes","authStart","type","AUTH_START","authSuccess","token","username","image","AUTH_SUCCESS","authFail","error","AUTH_FAIL","logout","localStorage","removeItem","AUTH_LOGOUT","checkAuthTimeout","expirationTime","dispatch","setTimeout","userRegister","user","post","then","response","console","log","catch","err","data","userLogin","url","expirationDate","Date","getTime","expiresIn","setItem","setAuthRedirectPath","path","SET_AUTH_REDIRECT_PATH","setFansInfo","fans","SET_FAN_INFO","setFansArr","fanArr","SET_FAN_ARR","setSelectedFan","selectedFan","SET_FAN_DETAIL","authCheckState","getItem","getHomePage","get","headers","concat","getAllFans"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nimport * as actionTypes from './actionTypes';\n\n\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    };\n};\n\nexport const authSuccess = (token, username, image) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        token: token,\n        username: username,\n        image: image\n    };\n};\n\nexport const authFail = (error) => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    };\n};\n\nexport const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationDate');\n    localStorage.removeItem('username');\n    localStorage.removeItem('image');\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    };\n};\n\nexport const checkAuthTimeout = (expirationTime) => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout());\n        }, expirationTime * 1000);\n    };\n};\n\nexport const userRegister = user => {\n    return dispatch => {\n        // let url = 'http://localhost:8080/register';\n        // axios.post(url, user)\n        axios.post('/register', user)\n            .then(response => {\n                console.log(response);\n            })\n            .catch(err => {\n                dispatch(authFail(err.response.data.error));\n            });\n    };\n};\n\nexport const userLogin = user => {\n    return dispatch => {\n        let url = 'http://localhost:8080/authenticate';\n        axios.post('/authenticate', user)\n            .then(response => {\n                console.log(response.data.token);\n                const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\n                localStorage.setItem('token', response.data.token);\n                localStorage.setItem('expirationDate', expirationDate);\n                localStorage.setItem('username', response.data.username);\n                localStorage.setItem('image', response.data.image);\n                dispatch(authSuccess(response.data.token, response.data.username, response.data.image));\n                // dispatch(checkAuthTimeout(response.data.expiresIn));\n            })\n            .catch(err => {\n                dispatch(authFail(err.response.data.error));\n            });\n    };\n};\n\nexport const setAuthRedirectPath = (path) => {\n    return {\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\n        path: path\n    };\n};\n\nexport const setFansInfo = (fans) => {\n    return {\n        type: actionTypes.SET_FAN_INFO,\n        fans: fans\n    };\n};\n\nexport const setFansArr = (fanArr) => {\n    return {\n        type: actionTypes.SET_FAN_ARR,\n        fanArr: fanArr\n    };\n\n}\n\nexport const setSelectedFan = (selectedFan) => {\n    return {\n        type: actionTypes.SET_FAN_DETAIL,\n        selectedFan: selectedFan\n    };\n\n}\n\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token');\n\n        // if (!token) {\n        //     dispatch(logout());\n        // } else {\n        //     const expirationDate = new Date(localStorage.getItem('expirationDate'));\n        //     if (expirationDate <= new Date()) {\n        //         dispatch(logout());\n        //     } else {\n        //         const username = localStorage.getItem('username');\n        //         dispatch(authSuccess(token, username));\n        //         dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000 ));\n        //     }   \n        // }\n        if (!token) {\n            dispatch(logout());\n        } else {\n            const username = localStorage.getItem('username');\n            dispatch(authSuccess(token, username));\n        }\n    };\n};\n\n\n\n\nexport const getHomePage = () => {\n    return dispatch => {\n        console.log(\"------\");\n        const token = localStorage.getItem('token');\n        if (token) {\n            let url = 'http://localhost:8080/home';\n            axios.get('/home', { headers: { \"Authorization\": \"Bearer \".concat(token) } })\n                // .set('Authorization', 'Bearer ' + token)\n                .then(response => {\n                    console.log(response);\n                })\n                .catch(err => {\n                    dispatch(authFail(err.response.data.error));\n                });\n        }\n    };\n};\n\nexport const getAllFans = () => {\n    return dispatch => {\n        console.log(\"====================================\");\n        const token = localStorage.getItem('token');\n        if (token) {\n        let url = 'http://localhost:8080/getAllFans';\n        axios.get('/getAllFans', { headers: { \"Authorization\": \"Bearer \".concat(token) } })\n            .then(response => {\n                console.log(response);\n                dispatch(setFansInfo(response.data));\n            })\n            // .catch(err => {\n            //     dispatch(authFail(err.response.data.error));\n            // });\n        }    \n    };\n};"]},"metadata":{},"sourceType":"module"}